{{<- if not .Values.kubeflow_tools.pipelines.objectStore.auth.fromEnv >}}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: kubeflow-pipelines--clone-bucket-secret
  annotations:
    ## kyverno policies with "generate" cant be updated: https://github.com/kyverno/kyverno/issues/7718
    argocd.argoproj.io/sync-options: Replace=true
    ## kyverno policies that clone resources must be synced before other resources
    argocd.argoproj.io/sync-wave: "-1"
spec:
  generateExisting: true
  useServerSideApply: true
  rules:
    {{<- $this_policy_name := "kubeflow-pipelines--clone-bucket-secret" >}}
    {{<- $source_secret__name := tmpl.Exec "kubeflow_pipelines.object_store.auth.source_secret_name" . >}}
    {{<- $source_secret__namespace :=  tmpl.Exec "kubeflow_pipelines.object_store.auth.source_secret_namespace" . >}}
    {{<- $target_secret__name := tmpl.Exec "kubeflow_pipelines.object_store.auth.secret_name" . >}}
    {{<- $target_secret__namespace := "kubeflow" >}}
    ## clone the secret from the source namespace to the target namespace
    - name: clone-secret
      match:
        any:
          - resources:
              kinds:
                - Namespace
              names:
                - {{< $target_secret__namespace | quote >}}
      generate:
        apiVersion: v1
        kind: Secret
        name: {{< $target_secret__name | quote >}}
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        clone:
          namespace: {{< $source_secret__namespace | quote >}}
          name: {{< $source_secret__name | quote >}}

    ## annotate the ~cloned~ secret so that ArgoCD ignores it
    - name: annotate-cloned-secret
      match:
        any:
          - resources:
              kinds:
                - Secret
              names:
                - {{< $target_secret__name | quote >}}
              namespaces:
                - {{< $target_secret__namespace | quote >}}
              operations:
                - CREATE
                - UPDATE
              selector:
                matchLabels:
                  generate.kyverno.io/policy-name: {{< $this_policy_name | quote >}}
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              argocd.argoproj.io/compare-options: IgnoreExtraneous
              argocd.argoproj.io/sync-options: Prune=false
---
## TODO: clone and mutate-existing rules must be in separate policies due to a bug in kyverno 1.11.4
##       recombine these policies once we update: https://github.com/kyverno/kyverno/issues/9571
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: kubeflow-pipelines--trigger-bucket-secret
  annotations:
    ## kyverno policies that clone resources must be synced before other resources
    argocd.argoproj.io/sync-wave: "-1"
spec:
  rules:
    ## restart deployments using the ~cloned~ secret when the ~cloned~ secret is updated
    ## NOTE: by default, kyverno ignores its own updates, so we must disable `skipBackgroundRequests`
    - name: trigger-deployment-restarts
      skipBackgroundRequests: false
      match:
        any:
          - resources:
              kinds:
                - Secret
              names:
                - {{< $target_secret__name | quote >}}
              namespaces:
                - {{< $target_secret__namespace | quote >}}
              operations:
                - CREATE
                - UPDATE
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: AnyIn
            value: 
              - CREATE
              - UPDATE
      mutate:
        targets:
          - apiVersion: apps/v1
            kind: Deployment
            namespace: {{< $target_secret__namespace | quote >}}
        patchStrategicMerge:
          spec:
            template:
              metadata:
                annotations:
                  deploykf.org/restart-trigger: "{{ random('[0-9a-z]{32}') }}"
              spec:
                containers:
                  - env:
                      - valueFrom:
                          secretKeyRef:
                            <(name): {{< $target_secret__name | quote >}}
{{<- end >}}